" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" ================ General Config ====================

set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set gcr=a:blinkon0              "Disable cursor blink
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim
set splitright

" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

syntax on

let mapleader=","

" =============== Plug Initialization ===============
" Use vim-plug plugin to manage all plugins
call plug#begin('~/.vim/plugged')
  " Appearance
  Plug 'chrisbra/color_highlight'
  Plug 'skwp/vim-colors-solarized'
  Plug 'itchyny/lightline.vim'
  " Bundle 'jby/tmux.vim.git'
  Plug 'morhetz/gruvbox'
  " Bundle 'xsunsmile/showmarks.git'
  Plug 'chriskempson/base16-vim'
  " Plug 'lifepillar/vim-solarized8'

  " Project
  Plug 'jistr/vim-nerdtree-tabs'
  Plug 'preservim/nerdtree'
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
  Plug 'junegunn/fzf.vim'
  " Bundle 'ctrlpvim/ctrlp.vim'
  " Bundle 'JazzCore/ctrlp-cmatcher'
  " Bundle 'xolox/vim-misc'
  " Bundle 'xolox/vim-session'

  " Languages
  " Bundle 'sheerun/vim-polyglot'
  " Bundle 'garbas/vim-snipmate.git'
  " Bundle 'honza/vim-snippets'
  " Bundle 'jtratner/vim-flavored-markdown.git'
  " Bundle 'vim-syntastic/syntastic.git'
  " Bundle 'nelstrom/vim-markdown-preview'
  " Bundle 'skwp/vim-html-escape'
  " Bundle 'mxw/vim-jsx'
  " Bundle 'jparise/vim-graphql'

  " Git
  Plug 'tpope/vim-fugitive'

  " Ruby
  " Bundle 'ecomba/vim-ruby-refactoring'
  Plug 'tpope/vim-rails'
  " Bundle 'tpope/vim-rake.git'
  " Bundle 'tpope/vim-rvm.git'
  " Bundle 'vim-ruby/vim-ruby.git'
  Plug 'keith/rspec.vim'
  Plug 'skwp/vim-iterm-rspec'
  " Bundle 'skwp/vim-spec-finder'
  " Bundle 'ck3g/vim-change-hash-syntax'
  " Bundle 'tpope/vim-bundler'

  " Search
  " Bundle 'justinmk/vim-sneak'
  " Bundle 'rking/ag.vim'
  " Bundle 'henrik/vim-indexed-search'
  " Bundle 'nelstrom/vim-visual-star-search'
  " Bundle 'skwp/greplace.vim'
  " Bundle 'Lokaltog/vim-easymotion'

  " Text Objects
  " Bundle 'austintaylor/vim-indentobject'
  " Bundle 'bootleq/vim-textobj-rubysymbol'
  " Bundle 'coderifous/textobj-word-column.vim'
  " Bundle 'kana/vim-textobj-datetime'
  " Bundle 'kana/vim-textobj-entire'
  " Bundle 'kana/vim-textobj-function'
  " Bundle 'kana/vim-textobj-user'
  " Bundle 'lucapette/vim-textobj-underscore'
  Plug 'nathanaelkane/vim-indent-guides'
  " Bundle 'nelstrom/vim-textobj-rubyblock'
  " Bundle 'thinca/vim-textobj-function-javascript'
  " Bundle 'wellle/targets.vim'

  " Vim Improvements
  " Bundle 'AndrewRadev/splitjoin.vim'
  " Bundle 'Raimondi/delimitMate'
  " Bundle 'Shougo/neocomplete.git'
  " Bundle 'briandoll/change-inside-surroundings.vim.git'
  " Bundle 'godlygeek/tabular'
  Plug 'tomtom/tcomment_vim'
  " Bundle 'vim-scripts/camelcasemotion.git'
  " Bundle 'vim-scripts/matchit.zip.git'
  " Bundle 'kristijanhusak/vim-multiple-cursors'
  " Bundle 'Keithbsmiley/investigate.vim'
  " Bundle 'chrisbra/NrrwRgn'
  Plug 'christoomey/vim-tmux-navigator'
  " Bundle 'MarcWeber/vim-addon-mw-utils.git'
  " Bundle 'bogado/file-line.git'
  " Bundle 'mattn/webapi-vim.git'
  Plug 'sjl/gundo.vim'
  Plug 'skwp/YankRing.vim'
  " Bundle 'tomtom/tlib_vim.git'
  " Bundle 'tpope/vim-abolish'
  " Bundle 'tpope/vim-endwise.git'
  " Bundle 'tpope/vim-ragtag'
  " Bundle 'tpope/vim-repeat.git'
  " Bundle 'tpope/vim-surround.git'
  Plug 'tpope/vim-surround'
  " Bundle 'tpope/vim-unimpaired'
  " Bundle 'vim-scripts/AnsiEsc.vim.git'
  " Bundle 'vim-scripts/AutoTag.git'
  " Bundle 'vim-scripts/lastpos.vim'
  " Bundle 'vim-scripts/sudo.vim'
  " Bundle 'goldfeld/ctrlr.vim'
  Plug 'editorconfig/editorconfig-vim'
call plug#end()

" ================ Turn Off Swap Files ==============

set noswapfile
set nobackup
set nowb

" ================ Persistent Undo ==================
" Keep undo history across sessions, by storing in file.
" Only works all the time.
if has('persistent_undo') && isdirectory(expand('~').'/.vim/backups')
  silent !mkdir ~/.vim/backups > /dev/null 2>&1
  set undodir=~/.vim/backups
  set undofile
endif

" ================ Indentation ======================

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

" Auto indent pasted text
nnoremap p p=`]<C-o>
nnoremap P P=`]<C-o>

filetype plugin on
filetype indent on

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:Â·

set nowrap       "Don't wrap lines
set linebreak    "Wrap lines at convenient points
set colorcolumn=80

" ================ Folds ============================

set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" ================ Completion =======================

set wildmode=list:longest
set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*DS_Store*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif

" ================ Scrolling ========================

set scrolloff=8         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

" ================ Search ===========================

set incsearch       " Find the next match as we type the search
set hlsearch        " Highlight searches by default
set ignorecase      " Ignore case when searching...
set smartcase       " ...unless we type a capital

" ================ Security ==========================
set modelines=0
set nomodeline

" ================ Custom Settings ========================
so ~/.dotfiles/vim/settings.vim
